<% let
        stores = {},
        paramsFrom = apis.reduce((prev,apiConfig)=>{
             if(apiConfig.store){
                  stores[apiConfig.name] = apiConfig.store;
             }
            return prev.concat(Object.entries(apiConfig.paramsFrom||{}).reduce((prev,item)=>{
                return prev.concat(Object.assign({},{name:item[0]},item[1]));
            },[]))
        },[]),
        fromRoute = paramsFrom.filter((item)=>item.from==='route'),
        fromInput = paramsFrom.filter((item)=>item.from==='input');
 %>

<template>
    <div class="<%= name %>-page">
      <%= (fromInput||[]).
        map((item)=>`<input class="${item.name}" type="${item.type}" v-model="${item.name}">`)
        .concat(form.length==0&&`${name}-page`||[]).join('\r\n') %>
    </div>
</template>
<script>
    <%= dependencies.join('\r\n') %>
    export default {
        name: '<%= name %>-page',
        data() {
            <%=
                fromRoute.map((item)=>{
                   return `this.${item.name} = this.$route.params.${item.name}`;
                }).concat(Object.entries(stores).map((item)=>`this.${item[1]}=''`)).join(';\r\n')
            %>
            return {
                <%= (fromInput||[]).map((item)=>item.name).map((item)=>`${item}:''`).join(',\r\n')%>
            }
        },
        methods: {
            <% let forms = (fromInput||[]).map((item)=>item.reg).filter((item)=>!!item);%>
            <% if(forms.length>0){%>
            formCheck(){
                let error = '';
                switch(true){
                    <% fromInput.forEach((item)=>{%>
                        case !<%= item.reg %>.test(this.<%= item.name %>):
                               error = '<%= item.failMsg %>';
                            break;
                    <%}) %>
                }
                if(error){
                    this.$toast(error);
                    return false;
                }
                return true;
            },
            submit(){
                if(this.formCheck()){

                }
            },
            <%} %>
            <% (apis||[]).forEach((apiConfig)=>{%>
            <%= apiConfig.name %>(){
                <% if(apiConfig.params){%>
                    let
                        <%= apiConfig._paramsAll.map((item)=>`${item} = this.${item}`).join(',') %>;
                <%} %>
                        <%= apiConfig.fileName %>.<%= apiConfig.name %>(<%= (apiConfig._paramsAll||[]).join(',') %>).then((data)=>{
                            <%
                                let store = stores[apiConfig.name];
                                if(store){%>
                                    this.<%= store %> = data;
                                <%}
                            %>
                        })
            },
            <%}) %>
        },
        created() {

        }
    }
</script>
<style lang="scss" rel="stylesheet/scss" scoped>
.<%= name %>-page{

}
</style>
